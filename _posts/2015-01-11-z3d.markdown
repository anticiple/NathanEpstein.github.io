---
layout: post
author: Nathan Epstein
title:  "Try Z3d.js"
date:   2015-01-11 12:00:00
categories: jekyll update
img: "../img/z3d.png"
---
<a href="https://github.com/NathanEpstein/Z3d"><img style="position: absolute; top: 0; left: 0; border: 0;" src="https://camo.githubusercontent.com/82b228a3648bf44fc1163ef44c62fcc60081495e/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f7265645f6161303030302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_left_red_aa0000.png"></a>

## About
Generate interactive 3D plots in the browser with a simple javascript function call. Functions return a Three.js scene which can be customized as needed.

The plots allow for click-and-drag reorientation and zooming. Below, you can find examples with the relevant code snippets.


## Examples
To use these examples, simply `bower install z3d` and copy the code.


<div class="btn-group" role="group">
  <button id='b1' type="button" class="btn btn-default">Simple Example</button>
  <button id='b2' type="button" class="btn btn-default">Customized Example</button>
</div>

<div id="plot"></div>

<div id='view1'>
  {% highlight html%}
<head>
  <script src="bower_components/threejs/build/three.min.js"></script>
  <script src="bower_components/z3d/js/OrbitControls.js"></script>
  <script src="bower_components/z3d/js/plot.js"></script>
</head>
<body>
  <script type="text/javascript">
  //HERE IS THE DATA TO PLOT:
  var x = [-0.8234, 0.0952, 1.9594, -0.2831, -0.4147, 1.5859, 0.5326, 0.0925, 0.3293, 1.3635, 0.3396, 0.0677, -0.6739, 0.4084, -1.4487, -0.1101, -0.7521, -1.2118, 1.7191, 0.2020, -0.1573, -0.2298, -0.8230, 1.7924, 0.4511];
  var y = [-1.4166, 1.353, -0.6294, 0.0567, 1.4157, 0.32806, 0.2377, -0.2262, -1.0602, -1.8150, 0.1075, -1.3516, 1.0137, 0.0183, -0.5466, 0.6416, -0.6655, 0.6874, -0.4616, -0.2808, 1.3443, -1.0518, -0.1332, -1.0097, 0.3643];
  var z = [1.4166, -1.353, 0.6294, -0.0567, -1.4157, -0.32806, -0.2377, 0.2262, 1.0602, -1.5089, 0.1543, -0.3516, 0.0137, 1.0183, 1.5466, -1.6416, 1.6655, -1.6874, -0.4616, -1.2808, -1.3443, 1.0518, -0.1332, 1.9700, -0.3643];

  //AND THIS IS HOW WE PLOT IT:
  var plot = plot3d(x,y,z);

  </script>
</body>
  {% endhighlight %}
</div>


<div hidden id='view2'>
  {% highlight html%}
<head>
  <script src="bower_components/threejs/build/three.min.js"></script>
  <script src="bower_components/z3d/js/OrbitControls.js"></script>
  <script src="bower_components/z3d/js/plot.js"></script>
</head>
<body>
  <script type="text/javascript">
  //HERE IS THE DATA TO PLOT:
  var x = [-0.8234, 0.0952, 1.9594, -0.2831, -0.4147, 1.5859, 0.5326, 0.0925, 0.3293, 1.3635, 0.3396, 0.0677, -0.6739, 0.4084, -1.4487, -0.1101, -0.7521, -1.2118, 1.7191, 0.2020, -0.1573, -0.2298, -0.8230, 1.7924, 0.4511];
  var y = [-1.4166, 1.353, -0.6294, 0.0567, 1.4157, 0.32806, 0.2377, -0.2262, -1.0602, -1.8150, 0.1075, -1.3516, 1.0137, 0.0183, -0.5466, 0.6416, -0.6655, 0.6874, -0.4616, -0.2808, 1.3443, -1.0518, -0.1332, -1.0097, 0.3643];
  var z = [1.4166, -1.353, 0.6294, -0.0567, -1.4157, -0.32806, -0.2377, 0.2262, 1.0602, -1.5089, 0.1543, -0.3516, 0.0137, 1.0183, 1.5466, -1.6416, 1.6655, -1.6874, -0.4616, -1.2808, -1.3443, 1.0518, -0.1332, 1.9700, -0.3643];


  //make a function to generate random colors for the points in our example
  function getHexColor(){
    var chars = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'];
    var string = '';
    for (var i=0;i<6;i++){
      var index = Math.floor(Math.random()*16);
      string += chars[index];
    }
    return string;
  }

  //now we generate size, label, and color arrays for our points
  var sizes = [];
  var colors = [];
  var labs = [];
  for (var i=0; i<x.length; i++){
    sizes.push(Math.random());
    colors.push(getHexColor());
    labs.push('label '+i);
  }

  // configure the plot with this object
  var config = {
    size: sizes,
    color: colors,
    label: labs,
    height: 650,
    width: 750,
    elementID: 'plot'
  }


  //AND THIS IS HOW WE PLOT IT:
  var plot = plot3d(x,y,z,config);

  </script>
</body>
  {% endhighlight %}
</div>

<script type="text/javascript">
  var x = [-0.8234, 0.0952, 1.9594, -0.2831, -0.4147, 1.5859, 0.5326, 0.0925, 0.3293, 1.3635, 0.3396, 0.0677, -0.6739, 0.4084, -1.4487, -0.1101, -0.7521, -1.2118, 1.7191, 0.2020, -0.1573, -0.2298, -0.8230, 1.7924, 0.4511];
  var y = [-1.4166, 1.353, -0.6294, 0.0567, 1.4157, 0.32806, 0.2377, -0.2262, -1.0602, -1.8150, 0.1075, -1.3516, 1.0137, 0.0183, -0.5466, 0.6416, -0.6655, 0.6874, -0.4616, -0.2808, 1.3443, -1.0518, -0.1332, -1.0097, 0.3643];
  var z = [1.4166, -1.353, 0.6294, -0.0567, -1.4157, -0.32806, -0.2377, 0.2262, 1.0602, -1.5089, 0.1543, -0.3516, 0.0137, 1.0183, 1.5466, -1.6416, 1.6655, -1.6874, -0.4616, -1.2808, -1.3443, 1.0518, -0.1332, 1.9700, -0.3643];

  var labs = [];
  z.forEach(function(el,i){
    labs.push('label '+i);
  });

  //make a function to generate random colors for the points in our example
  function getHexColor(){
    var chars = ['1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'];
    var string = '';
    for (var i=0;i<6;i++){
      var index = Math.floor(Math.random()*16);
      string += chars[index];
    }
    return string;
  }

  //now we generate size and color arrays for our points
  var sizes = [];
  var colors = [];
  for (var i=0; i<x.length; i++){
    sizes.push(Math.random());
    colors.push(getHexColor());
  }


  var config1 = {
    //height and width of the DOM element
    height: 650,
    width: 750,
    elementID:'plot'
  }

  var config2 = {
    size: sizes,
    color: colors,
    label: labs,
    //height and width of the DOM element
    height: 650,
    width: 750,
    elementID: 'plot'
  }
  var plot = plot3d(x,y,z,config1);


  $("#b1").click(function(){
    $("#plot").empty();
    $("#view2").hide();
    $("#view1").show();
    var plot = plot3d(x,y,z,config1);
  });
  $("#b2").click(function(){
    $("#plot").empty();
    $("#view1").hide();
    $("#view2").show();
    var plot = plot3d(x,y,z,config2);
  });

</script>


## More Information

For more information about using this library, visit the <a href="https://github.com/nathanepstein/z3d">GitHub repo.</a> Further functionality is being developed and pull requests are welcome.




